[DEFAULT]

instance_usage_audit=True
instance_usage_audit_period=hour
notify_on_state_change=vm_and_task_state
notification_driver=nova.openstack.common.notifier.rpc_notifier
notification_driver=ceilometer.compute.nova_notifier

###### LOGS Options defined in nova.openstack.common.log
debug=true
verbose=true
# format string to use for log messages with context (string value)
#logging_context_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s
#logging_default_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s
#logging_debug_format_suffix=%(funcName)s %(pathname)s:%(lineno)d
#logging_exception_prefix=%(asctime)s.%(msecs)03d %(process)d TRACE %(name)s %(instance)s
#default_log_levels=amqplib=WARN,sqlalchemy=WARN,boto=WARN,suds=INFO,keystone=INFO,eventlet.wsgi.server=WARN

# use_syslog                           -> syslog
# log_file and log_dir                 -> log_dir/log_file
# (not log_file) and log_dir           -> log_dir/{binary_name}.log
# use_stderr                           -> stderr
# (not user_stderr) and (not log_file) -> stdout
# publish_errors                       -> notification system
# use_syslog = False
# syslog_log_facility = LOG_USER

# Log output to standard error (boolean value)
# use_stderr = True
# log_file =
log_dir=/var/log/nova
# publish_errors = False

# If this option is specified, the logging configuration file
# specified is used and overrides any other logging options
# specified. Please see the Python logging module
# documentation for details on logging configuration files.
# (string value)
#log_config=/etc/nova/logging.conf

### STAT Where to store Neutron state files.  This directory must be writable by the user executing the agent.
state_path=/var/lib/nova
lock_path=/var/lock/nova
rootwrap_config=/etc/nova/rootwrap.conf
root_helper=sudo nova-rootwrap /etc/nova/rootwrap.conf

#### VNC
vncserver_listen=0.0.0.0

# COMPUTE/APIS: if you have separate configs for separate services
# this flag is required for both nova-api and nova-compute
allow_resize_to_same_host=True

####  GLANCE
image_service=nova.image.glance.GlanceImageService
glance_api_servers=_GLANCE_HOST_:9292
glance_host=_GLANCE_HOST_


#### api
osapi_compute_extension=nova.api.openstack.compute.contrib.standard_extensions
enabled_apis = ec2,osapi_compute,metadata  


##### VOLUMES
volume_api_class=nova.volume.cinder.API
##volume_driver=nova.volume.driver.ISCSIDriver
#volume_driver=nova.virt.baremetal.volume_driver.LibvirtVolumeDriver
#volumes_path=/var/lib/nova/volumes


# SCHEDULER
compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler
scheduler_default_filters=RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter
#scheduler_default_filters=RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ImagePropertiesFilter


##### COMPUTE
compute_driver = libvirt.LibvirtDriver
instance_name_template = instance-%08x
api_paste_config = /etc/nova/api-paste.ini


######## rabbitmq rpc
# Options defined in nova.openstack.common.rpc
# The messaging module to use, defaults to kombu. (string value)
#rpc_backend=nova.openstack.common.rpc.impl_kombu
# Size of RPC thread pool (integer value)
#rpc_thread_pool_size=64
# Size of RPC connection pool (integer value)
#rpc_conn_pool_size=30
# Seconds to wait for a response from call or multicall
#rpc_response_timeout=60
# IP address of the RabbitMQ installation
# rabbit_host = localhost
rabbit_password = _RABBITMQ_PASSWD_
# rabbit_port = 5672
# RabbitMQ single or HA cluster (host:port pairs i.e: host1:5672, host2:5672)
# rabbit_hosts is defaulted to '$rabbit_host:$rabbit_port'
rabbit_hosts = _RABBITMQ_HOSTS_
# rabbit_userid = guest
# rabbit_virtual_host = /
# rabbit_max_retries = 0
# rabbit_retry_interval = 1
# Use HA queues in RabbitMQ (x-ha-policy: all).You need to
# wipe RabbitMQ database when changing this option. (boolean value)
rabbit_ha_queues = true

##### databases
sql_connection = mysql://nova:e0310d4f@_MYSQL_HOST_/nova
### auth keystone
auth_strategy=keystone


#### network 
network_api_class=nova.network.neutronv2.api.API
neutron_admin_username=neutron
neutron_admin_password=_NEUTRON_PASSWORD_
######### the endpoint is keystone for network auth
neutron_admin_auth_url=http://_AUTH_HOST_:35357/v2.0/
neutron_auth_strategy=keystone
neutron_admin_tenant_name=service
######### neutron server endpoint
neutron_url=http://_NEUTRON_SERVER_:9696/
#neutron_ca_certificates_file=/var/lib/nova/keystone-signing/cacert.pem
neutron_api_insecure=True

libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtGenericVIFDriver
#libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtHybridOVSBridgeDriver

# use for 169.254.169.254
service_neutron_metadata_proxy = True
####### make sure the secret is the same with neutron
neutron_metadata_proxy_shared_secret = _NEUTRON_METADATA_PROXY_SHARED_SECRET_


# support delete is soft_delete or not
# if set reclaim_instance_interval not zero, nova delete <server> will set vm stat to soft_deleted but not delete it(compare with force_delete)
# you can use nova restore <server> to restore
#reclaim_instance_interval=86400

[keystone_authtoken]
auth_host = _AUTH_HOST_
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = nova
admin_password = _NOVA_PASSWORD_
#signing_dir = $state_path/nova-signing
#auth_version = v2.0
